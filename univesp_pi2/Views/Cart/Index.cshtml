@model CartViewModel
@{
    ViewData["Title"] = "Carrinho de Compras";
}

<div class="modal fade" id="clear-cart-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger">Limpar Carrinho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Você tem certeza que deseja remover todos os itens do seu carrinho?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirm-clear-cart-btn">Sim, Limpar</button>
            </div>
        </div>
    </div>
</div>


<div class="main-content">
<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h2 fw-bold mb-1">Carrinho de Compras</h1>
            <p class="text-muted mb-0" id="cart-item-count-text">@Model.Items.Count item(s) no carrinho</p>
        </div>
        <a href="@Url.Action("Index", "Catalogo")" class="btn btn-outline-secondary">
            <i data-lucide="arrow-left" class="me-2" style="width:16px;"></i>Continuar Comprando
        </a>
    </div>

    @if (Model.Items.Any())
    {
        <div class="row g-5">
            <div class="col-lg-8">
                <div class="vstack gap-3" id="cart-items-container">
                    @foreach (var item in Model.Items)
                    {
                        <div class="cart-item-card cart-item" data-product-id="@item.ProductId" data-unit-price="@item.UnitPrice.ToString("F2").Replace(",",".")">
                            <div class="row align-items-center">
                                <div class="col-auto"><img src="@item.ImageUrl" class="img-fluid rounded" alt="@item.Name" style="width: 80px;"></div>
                                <div class="col">
                                    <h6 class="mb-1 fw-semibold">@item.Name</h6>
                                    <p class="small text-muted mb-0">@item.Brand - @item.Code</p>
                                </div>
                                <div class="col-auto">
                                    <div class="quantity-input">
                                        <button class="btn btn-sm quantity-minus" type="button">-</button>
                                        <input type="text" class="form-control form-control-sm text-center quantity-value" value="@item.Quantity" readonly>
                                        <button class="btn btn-sm quantity-plus" type="button">+</button>
                                    </div>
                                </div>
                                <div class="col-auto text-center">
                                    <p class="fw-bold mb-0 product-price item-total-price">@item.TotalPrice.ToString("C")</p>
                                </div>
                                <div class="col-auto text-end">
                                    <button class="btn btn-sm remove-item-btn" type="button" title="Excluir item">
                                        <i data-lucide="trash-2" class="me-1" style="width: 14px;"></i> Excluir
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-white rounded border">
                    <a href="@Url.Action("Index", "Catalogo")" class="btn btn-outline-secondary">Adicionar Mais Itens</a>
                    <a href="#" class="btn btn-link text-danger" data-bs-toggle="modal" data-bs-target="#clear-cart-modal">Limpar Carrinho</a>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="summary-card">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title fw-bold mb-4">Resumo do Pedido</h5>
                            <div class="d-flex justify-content-between mb-2"><span class="text-muted" id="summary-subtotal-text">Subtotal (@Model.Items.Count() item(s))</span><span class="fw-semibold" id="summary-subtotal">@Model.Subtotal.ToString("C")</span></div>
                            <div class="d-flex justify-content-between"><span class="text-muted">Frete</span><span class="fw-semibold" id="summary-shipping">@Model.Shipping.ToString("C")</span></div>
                            <p class="small text-primary text-center my-3" id="shipping-message">@Model.FreeShippingMessage</p>
                            <hr>
                            <div class="d-flex justify-content-between fw-bold h5 mb-3"><span>Total</span><span class="product-price" id="summary-total">@Model.Total.ToString("C")</span></div>
                            <div class="d-grid"><a href="@Url.Action("Index", "Checkout")" class="btn btn-primary btn-lg">Finalizar Compra</a></div>
                            <div class="text-center text-muted small mt-3">ou 3x de @((Model.Total / 3).ToString("C")) sem juros<br>ou 12x de @((Model.Total / 12).ToString("C")) com juros</div>
                            <hr>
                            <ul class="info-list list-unstyled small mt-3">
                                <li class="mb-2"><i data-lucide="shield-check" class="text-dark"></i> Compra 100% segura</li>
                                <li class="mb-2"><i data-lucide="truck" class="text-dark"></i> Entrega em todo Brasil</li>
                                <li><i data-lucide="refresh-cw" class="text-dark"></i> Troca em até 30 dias</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5 card"><div class="card-body"><i data-lucide="shopping-cart" style="width: 64px; height: 64px;" class="text-muted mb-3"></i><h3 class="fw-bold">Seu carrinho está vazio</h3><p class="text-muted">Adicione produtos clicando no botão abaixo.</p><a href="@Url.Action("Index", "Catalogo")" class="btn btn-primary mt-3">Ver catálogo de peças</a></div></div>
    }
</div>
</div>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function () {
    const clearCartModal = new bootstrap.Modal(document.getElementById('clear-cart-modal'));

    const freeShippingThreshold = 199.00;
    const standardShippingCost = 29.90;
    const formatCurrency = value => value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
    function updateCartSummary() {
        let subtotal = 0;
        const items = document.querySelectorAll('.cart-item');
        if (items.length === 0) { window.location.reload(); return; }

        items.forEach(item => {
            const unitPrice = parseFloat(item.dataset.unitPrice);
            const quantity = parseInt(item.querySelector('.quantity-value').value);
            item.querySelector('.item-total-price').textContent = formatCurrency(unitPrice * quantity);
            subtotal += unitPrice * quantity;
        });
        
        let shipping = subtotal >= freeShippingThreshold ? 0 : standardShippingCost;
        let total = subtotal + shipping;
        
        document.getElementById('summary-subtotal').textContent = formatCurrency(subtotal);
        document.getElementById('summary-shipping').textContent = shipping === 0 ? 'Grátis' : formatCurrency(shipping);
        document.getElementById('summary-total').textContent = formatCurrency(total);
        document.getElementById('summary-subtotal-text').textContent = `Subtotal (${items.length} item(s))`;
        document.getElementById('cart-item-count-text').textContent = `${items.length} item(s) no carrinho`;
        
        const shippingMessageEl = document.getElementById('shipping-message');
        if (shipping === 0) {
            shippingMessageEl.textContent = 'Você ganhou frete grátis!';
            shippingMessageEl.className = 'text-success small text-center my-3';
        } else {
            const remaining = freeShippingThreshold - subtotal;
            shippingMessageEl.textContent = `Faltam ${formatCurrency(remaining)} para frete grátis!`;
            shippingMessageEl.className = 'text-primary small text-center my-3';
        }
    }

    function callApi(action, productId, quantity = 0) {
        return fetch(`@Url.Action("Action", "Cart")`.replace("Action", action), {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity })
        });
    }

    document.getElementById('cart-items-container')?.addEventListener('click', function (e) {
        const itemElement = e.target.closest('.cart-item');
        if (!itemElement) return;

        const productId = parseInt(itemElement.dataset.productId);
        const input = itemElement.querySelector('.quantity-value');
        let quantity = parseInt(input.value);

        if (e.target.closest('.remove-item-btn')) {
            if (confirm('Tem certeza que deseja remover este item?')) {
                callApi('RemoveFromCart', productId).then(res => res.json()).then(data => { if (data.success) { itemElement.remove(); updateCartSummary(); }});
            }
        }
        else if (e.target.closest('.quantity-plus')) {
            quantity++;
            input.value = quantity;
            callApi('UpdateQuantity', productId, quantity).then(() => updateCartSummary());
        }
        else if (e.target.closest('.quantity-minus') && quantity > 1) {
            quantity--;
            input.value = quantity;
            callApi('UpdateQuantity', productId, quantity).then(() => updateCartSummary());
        }
    });

    document.getElementById('clear-cart-btn')?.addEventListener('click', function(e) {
        e.preventDefault();
        if (confirm("Tem certeza que deseja limpar todo o carrinho?")) {
            fetch('@Url.Action("ClearCart", "Cart")', { method: 'POST' }).then(res => res.json()).then(data => { if (data.success) { window.location.reload(); } });
        }
    });

    
    document.getElementById('confirm-clear-cart-btn')?.addEventListener('click', function() {
        fetch('@Url.Action("ClearCart", "Cart")', { method: 'POST' })
            .then(res => res.json())
            .then(data => { if (data.success) { window.location.reload(); } });
    });
});
</script>
}